be defensible. Each element (a component or module) or improvement should be recorded separately from the underlying software asset and assigned a unique useful life, not to exceed five years. In some cases, the separately recorded element or improvement may be assigned a useful life that ends co-terminously with the underlying software asset if the analysis warrants such treatment. For example, an element or improvement may be recorded separately, but be amortized co-terminously with the original asset because it is known that the software will be decommissioned at a specific future date. 10. Amortization of software A software asset is amortized over its useful life. For each element or improvement, amortization should begin when the software is ready for its intended use (after all substantial testing is completed and not necessarily when it is placed in production). If the functionality of an element is entirely dependent on the completion of another element, amortization should begin when the functionality of both elements are ready for their intended use. 11. Regular evaluation of assigned useful lives At a minimum, each Bank should assess annually the useful lives of software. Each Bank should also assess annually the amortization periods assigned to implementation costs