have future economic benefit, and specify who has which legal rights, which enables determining ownership. Absent contracts or agreements that indicate ownership or rights, software ownership is determined by several factors that indicate control such as: The entity makes decisions about the software, including but not limited to defining requirements, and establishing implementation and decommission dates. The entity operates and provides daily support for the software. The entity controls granting rights to use the software. In the Federal Reserve System, there is a designated entity, such as a Central Business Administrative Function (CBAF), Product Office, or Function Office that controls a software asset, thus the asset would be recorded on the books of the Reserve Bank hosting this entity or, absent the entity, the Reserve Bank that exercises this control over the asset, regardless of physical location of the software. The software may be installed on another Reserve Bank's hardware, a hardware platform that is operated by a third party vendor that was contracted for by a Reserve Bank, or an outside party's hardware. As a result, software development may occur at one Reserve Bank, the software may be installed on hardware at another Reserve Bank, and a third Reserve Bank, hosting a CBAF for example, may control the software asset. Software developed for release to an outside party that will be controlled by the outside party (the above ownership factors are met) is not considered internal use software and should be expensed as development occurs. This includes instances when FRB staff makes further modifications to the software at the request of the outside party, but then releases the modifications for support and operation by that third party. 3. Definition of the asset unit for software The developed or purchased software (purchased software includes acquisition cost, as well as installation/integration costs) that provides economic benefit and otherwise qualifies to be capitalized is recorded as a single asset. When software development occurs over several years, however, and the software will be implemented in phases as elements, each element (a component or module) should be analyzed to determine whether it should be treated as a separate asset. Specifically, the element should provide economic benefit through distinct, substantive functionality; and meet the tests for materiality, ownership, and eligibility for capital treatment. If all the criteria are met, the element should be treated as a separate asset with a unique useful life determined from the analysis performed for section 9 and placed in service when substantially complete and ready for its intended use. When the majority of elements associated with a long term software development project are treated as separate software assets, but an element costs less than $100,000, the accounting treatment for this element should be discussed with Board staff. When identical software that is acquired is a bulk purchase of a number of low cost licenses that are licensed per server (for example software to be placed on many servers) or per user and individually are below the capitalization threshold, the bulk purchase can be capitalized as a single asset when it is material in value, that is $100,000 or more, and the license term is longer than one year. 3 A subsequent purchase of the same software that is acquired under the same contract (quantity not originally specified or ‘up to quantity' is specified) and that does not meet the $100,000 threshold should be charged to current expense. 4 Standard desktop utility software (such as word processing, electronic mail, and anti-virus software) and maintenance should be charged to current expense regardless of amount. 4. Cloud Computing arrangements Cloud computing arrangements are hosting arrangements in which the customer of the software does not take possession of the software, but instead accesses and uses the software on an as-needed basis or by subscription. A customer that acquires a software license—including in a hosting arrangement that transfers a software license to the customer—recognizes an intangible asset (i.e., the software license) and a corresponding liability to pay for it over time (unless the license is prepaid). As such, the Reserve Bank will record charges associated with a cloud computing arrangement containing a software license element if both the following conditions are met: The Reserve Bank has the contractual right to take possession of the software at any time during the hosting period without significant penalty, 5 and It is feasible for the Reserve Bank to either run the software on its own hardware or contract with another party unrelated to the vendor to host the software. If the arrangement contains a software license, Reserve Banks should account for the fees related to the software license element in a manner consistent with the acquisition of a software license. If the arrangement does not contain a software license, Reserve Banks should account for the arrangement as a service contract—typically by amortizing the service cost over the expected service period. Certain cloud computing arrangements may have multiple elements such as implementation, set up, training, and data conversion costs in addition to license and service elements. All expenses should be carefully evaluated for capitalization purposes. Appendix D should be reviewed for guidance for costs including those resulting from training, data capture, and conversion activities. Capitalized implementation costs for an arrangement that does not contain a software license should be amortized on a straight-line basis over the fixed non-cancellable term of the hosting arrangement. 6 5. Improvements to existing software Expenditures made to change existing software assets are considered either improvements or maintenance. Expenditures to existing software assets that meet the capitalization thresholds outlined in section 1 should be capitalized if the resulting improvement provides additional capabilities by meeting one of the following criteria: the quantity of output or operating efficiency of the asset is significantly increased, and the quality of output is significantly increased. Improvements add functionality that the software previously did not have, incorporate new specifications, or involve a significant change to the original specifications and are typically termed releases or versions. Improvements should be recorded as separate