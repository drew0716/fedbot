as-needed basis or by subscription. A customer that acquires a software licenseâincluding in a hosting arrangement that transfers a software license to the customerârecognizes an intangible asset (i.e., the software license) and a corresponding liability to pay for it over time (unless the license is prepaid). As such, the Reserve Bank will record charges associated with a cloud computing arrangement containing a software license element if both the following conditions are met: The Reserve Bank has the contractual right to take possession of the software at any time during the hosting period without significant penalty, 5 and It is feasible for the Reserve Bank to either run the software on its own hardware or contract with another party unrelated to the vendor to host the software. If the arrangement contains a software license, Reserve Banks should account for the fees related to the software license element in a manner consistent with the acquisition of a software license. If the arrangement does not contain a software license, Reserve Banks should account for the arrangement as a service contractâtypically by amortizing the service cost over the expected service period. Certain cloud computing arrangements may have multiple elements such as implementation, set up, training, and data conversion costs in addition to license and service elements. All expenses should be carefully evaluated for capitalization purposes. Appendix D should be reviewed for guidance for costs including those resulting from training, data capture, and conversion activities. Capitalized implementation costs for an arrangement that does not contain a software license should be amortized on a straight-line basis over the fixed non-cancellable term of the hosting arrangement. 6 5. Improvements to existing software Expenditures made to change existing software assets are considered either improvements or maintenance. Expenditures to existing software assets that meet the capitalization thresholds outlined in section 1 should be capitalized if the resulting improvement provides additional capabilities by meeting one of the following criteria: the quantity of output or operating efficiency of the asset is significantly increased, and the quality of output is significantly increased. Improvements add functionality that the software previously did not have, incorporate new specifications, or involve a significant change to the original specifications and are typically termed releases or versions. Improvements should be recorded as separate assets with a unique useful life determined from the analysis performed for section 9 . Costs incurred for maintenance such as fixes, patches, or updates such as increasing the field width, adding a comment field, and reformatting or adding reports are expensed. The following table provides examples of expenditures and how they would be classified: Capital Expense Augmenting existing business functions with new features and functions Updating of flags and thresholds Building completely new business functions Updating field lengths and comment fields Creating new screens and reports for new features or business functions 1 Reformatting of reports including the inclusion/exclusion of existing data fields Converting to a new platform, include converting to the cloud environment (mainframe to distributed platform; see section 6 ) 2 Modifying layout of screens Building a new interface Changes to facilitate a new operating system version (Windows XP to Windows Vista) Installing fixes and patches 1. Initial or upgrade work performed during the development phase should be capitalized. Similar work performed during the post-implementation phase should be expensed. Return to table 2. For the conversion to be considered capital, it needs to meet the capitalization criteria in section 5, Improvements to existing software. Return to table A specific software development project may include expenditures for improvements and maintenance that cannot be easily separated. One approach that can be used to separate these costs is a ratio that is based on the projected work hours for development activities for each type of work. Such a ratio can be applied to the development costs to determine the percentage of expenditures that should be capitalized. The basis for allocating costs should be defensible. 6. Replacement of existing software A replacement is a substitution of the existing asset with a new asset. When the results of efforts to rewrite or improve the software are significant enough to be considered a replacement to the existing software and the expenditures meet the criteria in sections 1, 2, and 5, the costs are capitalized. Conversion of an application from a mainframe to a distributed platform is generally considered a replacement. Even though the application's functionality may not have changed, a significant alteration of the software occurs. The software code is converted to a different programming language, different operating systems and technologies are used, and different tools are used to manage the application. 7 Because the former software asset is significantly altered, the net book value of the former software asset is removed from the books and expensed. The useful life of the replacement, therefore, should be unique based on the analysis performed using section 9 . In addition, if there is a replacement of an element of existing software and the expenditures meet the criteria in sections 1, 2, and 5, then the former element, if previously treated as a separate asset, is removed from the books and expensed. The new element would be capitalized in accordance with section 5 . When the former software asset is replaced by new software whose costs do not meet the capitalization threshold and are expensed, the net book value of the former asset is removed from the books and also expensed. 7. Capitalizable costs Costs incurred during software development or implementation of a cloud computing arrangement are capitalized or expensed depending on the project stage. These stages are commonly described as preliminary, development, and post-implementation. The preliminary stage includes activities related to the conceptual formulation of alternatives the evaluation of alternatives the determination of existence of needed technology the final selection of alternatives the selection of vendors and consultants and the prototype or proof of concept. Capitalized: None Expensed: All costs associated with preliminary stage activities. The development stage includes all the activities related to designing the chosen path including configuration